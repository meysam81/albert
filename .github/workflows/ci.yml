name: ci
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust stable with llvm-tools-preview
        run: |
          rustup toolchain install stable --component llvm-tools-preview
      - name: Install grcov
        run: |
          curl -sL https://github.com/mozilla/grcov/releases/download/v0.8.18/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf - -C "${HOME}/.cargo/bin"
          grcov --version
      - env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Cinstrument-coverage"
          LLVM_PROFILE_FILE: "cargo-test-%p-%m.profraw"
        name: Run tests
        run: |
          cargo test --all-features --all-targets --all | tee -a $GITHUB_STEP_SUMMARY
      - name: Generate coverage reports
        run: |
          grcov . --binary-path ./target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o coverage.lcov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  build:
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        include:
          - image: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - image: macos-latest
            target: x86_64-apple-darwin
          - image: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - image: macos-latest
            target: aarch64-apple-darwin
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust stable
        run: |
          rustup toolchain install stable --target ${{ matrix.target }}
      - if: contains(matrix.target, 'musl')
        name: Install musl
        run: |
          sudo apt update
          sudo apt install -y musl-tools
      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}
      - name: Rename binary
        run: |
          cp target/${{ matrix.target }}/release/al target/${{ matrix.target }}/release/al-${{ matrix.target }}
      - name: Checksum
        run: |
          cd target/${{ matrix.target }}/release
          sha256sum al-${{ matrix.target }} > al-${{ matrix.target }}.sha256
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: al-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/al-${{ matrix.target }}
            target/${{ matrix.target }}/release/al-${{ matrix.target }}.sha256
          if-no-files-found: error
      - if: github.ref == 'refs/heads/v*'
        name: Upload assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/al-${{ matrix.target }}
            target/${{ matrix.target }}/release/al-${{ matrix.target }}.sha256
